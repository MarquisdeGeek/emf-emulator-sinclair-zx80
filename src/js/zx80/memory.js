// Memory controller : 
// std.memory
const zx80_memory = (function(bus, options) {
  let enabledBlockList = {};
  enableBlock('rom');
  enableBlock('ram16k');
  let rom = [
    0x21, 0xff, 0x7f, 0x3e, 0x3f, 0xc3, 0x61, 0x02, 0xe1, 0x6e, 0xfd, 0xcb, 0x00, 0x7e, 0x18, 0x03,
    0xc3, 0x60, 0x05, 0xc8, 0xfd, 0x75, 0x00, 0xc9, 0x18, 0x38, 0x2a, 0x26, 0x40, 0x7e, 0xa7, 0xc0,
    0xcd, 0x52, 0x00, 0x18, 0xf9, 0xcd, 0x55, 0x00, 0xcd, 0x1a, 0x00, 0x06, 0x00, 0xc3, 0xe1, 0x09,
    0xcd, 0x4f, 0x09, 0xd0, 0xc5, 0xc3, 0xf3, 0x0c, 0x0d, 0xc2, 0x45, 0x00, 0xe1, 0x05, 0xc8, 0xcb,
    0xd9, 0xed, 0x4f, 0xfb, 0xe9, 0xd1, 0xc8, 0x18, 0xf8, 0xcd, 0x25, 0x00, 0x7e, 0xfe, 0xd9, 0xc2,
    0xae, 0x08, 0x2a, 0x26, 0x40, 0x23, 0x22, 0x26, 0x40, 0x7e, 0xfe, 0xb0, 0xc0, 0x22, 0x04, 0x40,
    0xfd, 0xcb, 0x19, 0x7e, 0x28, 0xef, 0xfd, 0xcb, 0x01, 0xd6, 0x18, 0xe9, 0x3f, 0x3d, 0x28, 0x3b,
    0x26, 0x38, 0x29, 0x2b, 0x2c, 0x36, 0x3c, 0x2a, 0x37, 0x39, 0x1d, 0x1e, 0x1f, 0x20, 0x21, 0x1c,
    0x25, 0x24, 0x23, 0x22, 0x35, 0x34, 0x2e, 0x3a, 0x3e, 0x76, 0x31, 0x30, 0x2f, 0x2d, 0x00, 0x1b,
    0x32, 0x33, 0x27, 0x0e, 0xd7, 0x0f, 0xdf, 0x09, 0x08, 0x06, 0x07, 0x0b, 0x02, 0x03, 0x04, 0x05,
    0x0a, 0xdb, 0xe0, 0xd5, 0xd6, 0x72, 0x77, 0x74, 0x73, 0x70, 0x71, 0xde, 0xd9, 0xda, 0x0d, 0x01,
    0x75, 0xe3, 0xdd, 0xdc, 0xe2, 0x0c, 0xd8, 0xe4, 0xe5, 0xe1, 0xd4, 0x8f, 0x81, 0x39, 0x2d, 0x2a,
    0xb3, 0x39, 0xb4, 0x99, 0x9a, 0x91, 0x90, 0x33, 0x34, 0xb9, 0x92, 0x93, 0x94, 0x95, 0x26, 0x33,
    0xa9, 0x34, 0xb7, 0x14, 0x94, 0x96, 0x97, 0x98, 0x31, 0x2e, 0x38, 0xb9, 0x37, 0x2a, 0x39, 0x3a,
    0x37, 0xb3, 0x28, 0x31, 0xb8, 0x29, 0x2e, 0xb2, 0x38, 0x26, 0x3b, 0xaa, 0x2b, 0x34, 0xb7, 0x2c,
    0x34, 0x00, 0x39, 0xb4, 0x35, 0x34, 0x30, 0xaa, 0x2e, 0x33, 0x35, 0x3a, 0xb9, 0x37, 0x26, 0x33,
    0x29, 0x34, 0x32, 0x2e, 0x38, 0xaa, 0x31, 0x2a, 0xb9, 0x8f, 0x8f, 0x33, 0x2a, 0x3d, 0xb9, 0x35,
    0x37, 0x2e, 0x33, 0xb9, 0x8f, 0x33, 0x2a, 0xbc, 0x37, 0x3a, 0xb3, 0x38, 0x39, 0x34, 0xb5, 0x28,
    0x34, 0x33, 0x39, 0x2e, 0x33, 0x3a, 0xaa, 0x2e, 0xab, 0x2c, 0x34, 0x00, 0x38, 0x3a, 0xa7, 0x31,
    0x34, 0x26, 0xa9, 0x28, 0x31, 0x2a, 0x26, 0xb7, 0x37, 0x2a, 0xb2, 0x8f, 0xcd, 0xad, 0x01, 0x06,
    0x08, 0x10, 0xfe, 0x2a, 0x1e, 0x40, 0x23, 0x22, 0x1e, 0x40, 0x21, 0xff, 0xff, 0x06, 0xfe, 0x48,
    0xed, 0x78, 0xf6, 0x01, 0xf6, 0xe0, 0x57, 0x2f, 0xfe, 0x01, 0x9f, 0xb0, 0xa5, 0x6f, 0x7c, 0xa2,
    0x67, 0xcb, 0x00, 0xed, 0x78, 0x38, 0xed, 0x1f, 0xcb, 0x14, 0x17, 0x17, 0x17, 0x9f, 0xe6, 0x18,
    0xc6, 0x20, 0x32, 0x23, 0x40, 0xed, 0x4b, 0x26, 0x40, 0x22, 0x26, 0x40, 0x78, 0xc6, 0x02, 0xed,
    0x42, 0xeb, 0x21, 0x22, 0x40, 0x7e, 0xb2, 0xb3, 0xc8, 0x78, 0xfe, 0xfe, 0x9f, 0x06, 0x1f, 0xb6,
    0xa0, 0x1f, 0x77, 0x05, 0x10, 0xfe, 0xd3, 0xff, 0x3e, 0xec, 0x06, 0x19, 0x2a, 0x0c, 0x40, 0xcb,
    0xfc, 0xcd, 0xad, 0x01, 0x3e, 0xf3, 0x04, 0x2b, 0xfd, 0x35, 0x23, 0x18, 0x8f, 0xfd, 0x4e, 0x23,
    0xed, 0x4f, 0x3e, 0xdd, 0xfb, 0xe9, 0xd1, 0x11, 0xcb, 0x12, 0x3e, 0x7f, 0xdb, 0xfe, 0x1f, 0x30,
    0x42, 0x10, 0xfe, 0x1b, 0x7a, 0xb3, 0x20, 0xf2, 0x21, 0x00, 0x40, 0x11, 0x08, 0xf8, 0xcb, 0x06,
    0x9f, 0xe6, 0x05, 0xc6, 0x04, 0x4f, 0xd3, 0xff, 0x06, 0x24, 0x10, 0xfe, 0x3e, 0x7f, 0xdb, 0xfe,
    0x06, 0x23, 0x10, 0xfe, 0x0d, 0x20, 0xef, 0x42, 0x00, 0x10, 0xfd, 0x16, 0xfe, 0x1d, 0x20, 0xde,
    0x1f, 0x30, 0x10, 0xcd, 0xf8, 0x01, 0x18, 0xd3, 0x23, 0xeb, 0x2a, 0x0a, 0x40, 0x37, 0xed, 0x52,
    0xeb, 0xd0, 0xe1, 0xc3, 0x83, 0x02, 0xd1, 0x11, 0x12, 0x57, 0x3e, 0x7f, 0xdb, 0xfe, 0x1f, 0x30,
    0xf2, 0x17, 0x17, 0x38, 0xf2, 0x1b, 0x7a, 0xb3, 0x20, 0xf0, 0xfd, 0x34, 0x0b, 0x21, 0x00, 0x40,
    0x1e, 0x08, 0x3e, 0x7f, 0xdb, 0xfe, 0x1f, 0x30, 0x24, 0x17, 0x17, 0x30, 0xf5, 0x0e, 0x94, 0x06,
    0x1a, 0x0d, 0xdb, 0xfe, 0x17, 0xcb, 0x79, 0x79, 0x38, 0xf5, 0x10, 0xf5, 0x20, 0x04, 0xfe, 0x56,
    0x30, 0xe0, 0x3f, 0xcb, 0x16, 0x1d, 0x20, 0xda, 0xcd, 0xf8, 0x01, 0x18, 0xd3, 0x15, 0xf2, 0x00,
    0x00, 0xfd, 0x35, 0x0b, 0x18, 0xad, 0xcb, 0xb8, 0xcb, 0xb0, 0xed, 0x43, 0x06, 0x40, 0xc1, 0x18,
    0x22, 0x36, 0x01, 0x2b, 0xbc, 0x20, 0xfa, 0x23, 0x35, 0x28, 0xfc, 0xf9, 0xf5, 0x3e, 0x0e, 0xed,
    0x47, 0xed, 0x56, 0xfd, 0x21, 0x00, 0x40, 0x21, 0x28, 0x40, 0x22, 0x08, 0x40, 0x36, 0x80, 0x23,
    0x22, 0x0a, 0x40, 0x2a, 0x0a, 0x40, 0x36, 0xb0, 0x23, 0x36, 0x76, 0x23, 0x22, 0x0c, 0x40, 0xfd,
    0x36, 0x12, 0x02, 0xcd, 0x47, 0x07, 0xeb, 0x78, 0xfd, 0x96, 0x12, 0x38, 0x5a, 0x3c, 0x47, 0xd9,
    0x2a, 0x06, 0x40, 0xed, 0x5b, 0x13, 0x40, 0xed, 0x52, 0xeb, 0x30, 0x04, 0x19, 0x22, 0x13, 0x40,
    0xcd, 0x0a, 0x06, 0x1e, 0x00, 0xcd, 0xf7, 0x04, 0x38, 0xfb, 0x1d, 0x20, 0x33, 0xe5, 0x2a, 0x06,
    0x40, 0xcd, 0x0a, 0x06, 0xe1, 0xa7, 0xed, 0x52, 0x21, 0x13, 0x40, 0x30, 0x0b, 0xeb, 0x7e, 0x23,
    0xed, 0xa0, 0x12, 0x18, 0xbe, 0x21, 0x06, 0x40, 0x5e, 0x23, 0x56, 0xe5, 0xeb, 0x23, 0xcd, 0x0a,
    0x06, 0xcd, 0xc2, 0x03, 0xe1, 0xfd, 0xcb, 0x19, 0x6e, 0x20, 0x0c, 0x72, 0x2b, 0x73, 0x18, 0xa3,
    0xcd, 0xc2, 0x05, 0xed, 0x53, 0x0e, 0x40, 0xfd, 0x36, 0x01, 0x01, 0x2a, 0x0a, 0x40, 0xcd, 0xbe,
    0x07, 0xed, 0x5b, 0x0e, 0x40, 0xfd, 0x46, 0x12, 0x0e, 0x01, 0xd9, 0x2a, 0x0a, 0x40, 0xcd, 0x12,
    0x05, 0x38, 0x0a, 0x21, 0x12, 0x40, 0x34, 0x3e, 0x18, 0xbe, 0x30, 0xb7, 0x77, 0xcd, 0xc2, 0x05,
    0xcd, 0x3f, 0x01, 0xcb, 0x28, 0x9f, 0xf6, 0x26, 0x2e, 0x05, 0x95, 0x85, 0x37, 0xcb, 0x19, 0x38,
    0xfa, 0x0c, 0x20, 0xc3, 0x48, 0x2d, 0x2e, 0x01, 0x20, 0xf1, 0x21, 0x6b, 0x00, 0x5f, 0x19, 0x7e,
    0xfd, 0xcb, 0x01, 0x56, 0x28, 0x07, 0xc6, 0xc0, 0xfe, 0xe6, 0x30, 0x01, 0x7e, 0xfe, 0xc0, 0xea,
    0x5e, 0x03, 0x2a, 0x04, 0x40, 0x01, 0x01, 0x00, 0xcd, 0xd5, 0x05, 0x12, 0x18, 0x99, 0x5f, 0x21,
    0x92, 0x02, 0x19, 0x19, 0x4e, 0x23, 0x46, 0xc5, 0x2a, 0x04, 0x40, 0xc9, 0x01, 0x01, 0x00, 0xc3,
    0x66, 0x06, 0xa9, 0x03, 0xd5, 0x02, 0x82, 0x03, 0x87, 0x03, 0xb9, 0x03, 0xcb, 0x03, 0x08, 0x04,
    0x95, 0x03, 0xcd, 0x9e, 0x03, 0x2b, 0x2b, 0x23, 0x7e, 0xfe, 0x76, 0x28, 0x1a, 0x36, 0xb0, 0x2a,
    0x04, 0x40, 0x77, 0x18, 0xc7, 0xcd, 0x9e, 0x03, 0x2b, 0xcd, 0x6c, 0x03, 0x18, 0xbe, 0xed, 0x5b,
    0x0a, 0x40, 0x1a, 0xfe, 0xb0, 0xc0, 0xd1, 0x18, 0xb3, 0x2a, 0x06, 0x40, 0xcd, 0x0a, 0x06, 0xeb,
    0xcd, 0xc2, 0x03, 0x21, 0x07, 0x40, 0xc3, 0xe5, 0x02, 0x11, 0x00, 0x00, 0x18, 0xf5, 0xeb, 0x11,
    0xba, 0x03, 0x7e, 0xe6, 0xc0, 0x20, 0xf7, 0x56, 0x23, 0x5e, 0xc9, 0x0e, 0x00, 0xed, 0x5b, 0x0a,
    0x40, 0xd9, 0x2a, 0x06, 0x40, 0xcd, 0x0a, 0x06, 0xcd, 0xc2, 0x03, 0x7a, 0xb3, 0xca, 0x83, 0x02,
    0x2b, 0xcd, 0xbf, 0x06, 0x2b, 0xcd, 0x24, 0x06, 0x23, 0x23, 0x0b, 0x0b, 0xd9, 0xd5, 0xd9, 0xd1,
    0x3e, 0xb0, 0x12, 0x13, 0xe5, 0x21, 0x22, 0x00, 0x19, 0x09, 0xed, 0x72, 0x30, 0xa9, 0xe1, 0xed,
    0xb0, 0xed, 0x53, 0x0c, 0x40, 0xc3, 0x93, 0x02, 0x2a, 0x15, 0x40, 0x7c, 0xb5, 0x20, 0x98, 0x2a,
    0x04, 0x40, 0xcd, 0x6c, 0x03, 0x2a, 0x0a, 0x40, 0x22, 0x26, 0x40, 0xcd, 0x1a, 0x00, 0xfd, 0xcb,
    0x19, 0x6e, 0x20, 0x18, 0xcd, 0x79, 0x06, 0xd9, 0x7c, 0xb5, 0xc2, 0xba, 0x04, 0x2b, 0x2b, 0x22,
    0x02, 0x40, 0xcd, 0x47, 0x07, 0xd9, 0x7e, 0xfe, 0x76, 0xca, 0x83, 0x02, 0xfd, 0x36, 0x00, 0xff,
    0xfd, 0x36, 0x01, 0x88, 0xcd, 0xbe, 0x07, 0xcd, 0x0a, 0x0d, 0xed, 0x5b, 0x02, 0x40, 0x21, 0x19,
    0x40, 0xcb, 0x6e, 0x28, 0x03, 0xcb, 0xae, 0x13, 0xfd, 0xcb, 0x00, 0x7e, 0x28, 0x2a, 0x21, 0x01,
    0x40, 0xcb, 0x5e, 0xcb, 0x9e, 0x2a, 0x26, 0x40, 0x23, 0x28, 0x09, 0xeb, 0x7c, 0xe6, 0xc0, 0x20,
    0x17, 0xcd, 0x0a, 0x06, 0x7e, 0xe6, 0xc0, 0x20, 0x0f, 0x56, 0x23, 0x5e, 0xed, 0x53, 0x02, 0x40,
    0x23, 0x3e, 0x7f, 0xdb, 0xfe, 0x1f, 0x38, 0xbc, 0xcd, 0xe0, 0x06, 0xcd, 0xc2, 0x05, 0x01, 0x20,
    0x01, 0xd9, 0x3a, 0x00, 0x40, 0xed, 0x4b, 0x02, 0x40, 0x3c, 0x28, 0x0c, 0xfe, 0x09, 0x20, 0x01,
    0x03, 0xed, 0x43, 0x17, 0x40, 0x20, 0x01, 0x0b, 0xcd, 0x56, 0x05, 0x3e, 0x15, 0xd7, 0xcd, 0xa1,
    0x06, 0xcd, 0xc2, 0x05, 0xcd, 0x3f, 0x01, 0xc3, 0x83, 0x02, 0x22, 0x06, 0x40, 0xd9, 0xeb, 0xcd,
    0x47, 0x07, 0xed, 0x52, 0xd9, 0xcd, 0x0a, 0x06, 0xe5, 0x20, 0x06, 0xcd, 0x24, 0x06, 0xcd, 0x66,
    0x06, 0xd9, 0x23, 0x44, 0x4d, 0x7d, 0xd6, 0x03, 0xb4, 0xc4, 0x4f, 0x09, 0xe1, 0x30, 0x15, 0xc5,
    0x2b, 0xcd, 0xd5, 0x05, 0x13, 0x2a, 0x0c, 0x40, 0x2b, 0xc1, 0x0b, 0xed, 0xb8, 0x2a, 0x06, 0x40,
    0xeb, 0x72, 0x23, 0x73, 0xc3, 0x83, 0x02, 0xed, 0x4b, 0x06, 0x40, 0xcd, 0x1c, 0x06, 0x16, 0x97,
    0x28, 0x05, 0x11, 0x00, 0x00, 0xcb, 0x13, 0x7e, 0xfe, 0x40, 0xdc, 0xbf, 0x06, 0xd0, 0x23, 0x7a,
    0xd7, 0xd0, 0xfd, 0xcb, 0x01, 0xc6, 0xed, 0x4b, 0x15, 0x40, 0xa7, 0xed, 0x42, 0x20, 0x04, 0x3e,
    0xb8, 0xd7, 0xc8, 0x09, 0x7e, 0x23, 0xfe, 0xb0, 0x28, 0x12, 0xfe, 0xc0, 0xea, 0x59, 0x05, 0x38,
    0x05, 0xcd, 0x84, 0x05, 0x18, 0x03, 0xcd, 0x59, 0x05, 0xd0, 0x18, 0xda, 0xfd, 0xcb, 0x01, 0x56,
    0x20, 0x01, 0x3c, 0xd7, 0x18, 0xf3, 0x7b, 0x07, 0x0f, 0xd8, 0x18, 0x10, 0xaf, 0x09, 0x3c, 0x38,
    0xfc, 0xed, 0x42, 0x3d, 0x28, 0xf0, 0x1e, 0x1c, 0x83, 0xa7, 0x28, 0x04, 0xfd, 0xcb, 0x01, 0x86,
    0xd9, 0x67, 0x17, 0x17, 0x0d, 0x30, 0x02, 0x0e, 0x00, 0xfa, 0x74, 0x05, 0x38, 0x0e, 0x20, 0x0c,
    0x3e, 0x76, 0x12, 0x13, 0x38, 0x02, 0x0e, 0x20, 0xa7, 0x05, 0x28, 0x06, 0x68, 0xcd, 0x58, 0x09,
    0x12, 0x13, 0xd9, 0xc9, 0xcd, 0xa8, 0x05, 0x30, 0x09, 0xfd, 0xcb, 0x01, 0x46, 0x20, 0x03, 0xaf,
    0xd7, 0xd0, 0x0a, 0xe6, 0x3f, 0xcd, 0x59, 0x05, 0xd0, 0x0a, 0x03, 0x87, 0x30, 0xf4, 0xfe, 0x38,
    0xd8, 0xaf, 0xfd, 0xcb, 0x01, 0xc6, 0x18, 0xb8, 0xe5, 0x21, 0xba, 0x00, 0x96, 0x23, 0x38, 0x09,
    0x3c, 0x47, 0xcb, 0x7e, 0x23, 0x28, 0xfb, 0x10, 0xf9, 0x44, 0x4d, 0xe1, 0x0a, 0xe6, 0x3f, 0xc6,
    0xe4, 0xc9, 0xd9, 0xaf, 0xb8, 0x28, 0x09, 0xb9, 0x3e, 0x76, 0x28, 0x02, 0x12, 0x13, 0x10, 0xfc,
    0xed, 0x53, 0x10, 0x40, 0xc9, 0xcd, 0xdf, 0x05, 0x2a, 0x10, 0x40, 0xeb, 0xed, 0xb8, 0xc9, 0xf5,
    0xe5, 0x21, 0x08, 0x40, 0x3e, 0x05, 0x5e, 0x23, 0x56, 0xe3, 0xa7, 0xed, 0x52, 0x19, 0xe3, 0x30,
    0x09, 0xd5, 0xeb, 0x09, 0xeb, 0x72, 0x2b, 0x73, 0x23, 0xd1, 0x23, 0x3d, 0x20, 0xe8, 0xeb, 0xd1,
    0xf1, 0xa7, 0xed, 0x52, 0x44, 0x4d, 0x03, 0x19, 0xeb, 0xc9, 0xe5, 0x21, 0x28, 0x40, 0x54, 0x5d,
    0xc1, 0xeb, 0xcd, 0x1c, 0x06, 0xd0, 0xc5, 0xcd, 0x24, 0x06, 0x18, 0xf4, 0x7e, 0xb8, 0xc0, 0x23,
    0x7e, 0x2b, 0xb9, 0xc9, 0xe5, 0x7e, 0x87, 0xfa, 0x35, 0x06, 0x38, 0x17, 0x23, 0x3e, 0x76, 0x23,
    0x47, 0xed, 0xb1, 0x18, 0x1d, 0x01, 0x02, 0x00, 0x38, 0x01, 0x48, 0x17, 0x17, 0x23, 0x7e, 0x30,
    0xfb, 0x18, 0x0c, 0xe6, 0x40, 0x3e, 0x01, 0x28, 0xe6, 0x23, 0x7e, 0x23, 0x06, 0x00, 0x4f, 0x03,
    0x09, 0x09, 0xd1, 0xa7, 0xed, 0x52, 0x44, 0x4d, 0x19, 0xeb, 0xc9, 0x2a, 0x0a, 0x40, 0x2b, 0xed,
    0x5b, 0x08, 0x40, 0xcd, 0x53, 0x06, 0xc5, 0x78, 0x2f, 0x47, 0x79, 0x2f, 0x4f, 0x03, 0xcd, 0xdf,
    0x05, 0xeb, 0xe1, 0x19, 0xd5, 0xed, 0xb0, 0xe1, 0xc9, 0x7e, 0xd9, 0x21, 0x00, 0x00, 0x44, 0xd6,
    0x1c, 0x38, 0x17, 0xfe, 0x0a, 0x30, 0x13, 0x4f, 0x3e, 0x0d, 0xbc, 0x30, 0x01, 0x67, 0x54, 0x5d,
    0x29, 0x29, 0x19, 0x29, 0x09, 0xd9, 0xdf, 0xd9, 0x18, 0xe5, 0x7c, 0x22, 0x22, 0x40, 0xd9, 0x17,
    0xc9, 0xd5, 0xe5, 0x60, 0x69, 0xcb, 0x78, 0x28, 0x0c, 0x3e, 0x12, 0xcd, 0x59, 0x05, 0x30, 0x2d,
    0x21, 0x01, 0x00, 0xed, 0x42, 0x1e, 0xff, 0x01, 0xf0, 0xd8, 0xcd, 0x4c, 0x05, 0x18, 0x09, 0xd5,
    0x56, 0x23, 0x5e, 0xe5, 0xeb, 0x1e, 0x00, 0x37, 0x01, 0x18, 0xfc, 0xdc, 0x4c, 0x05, 0x01, 0x9c,
    0xff, 0xdc, 0x4c, 0x05, 0x0e, 0xf6, 0xdc, 0x4c, 0x05, 0x7d, 0xdc, 0x56, 0x05, 0xe1, 0xd1, 0xc9,
    0xfd, 0xcb, 0x01, 0x7e, 0xe1, 0xc8, 0xd9, 0xed, 0x5b, 0x0e, 0x40, 0xed, 0x4b, 0x24, 0x40, 0xd9,
    0xe9, 0xfd, 0xcb, 0x00, 0x7e, 0xc8, 0xcd, 0xe0, 0x06, 0x2a, 0x22, 0x40, 0xfd, 0xcb, 0x01, 0x76,
    0x28, 0x0a, 0x44, 0x4d, 0xcd, 0xa1, 0x06, 0x18, 0x1a, 0xd7, 0x30, 0x19, 0x7e, 0x23, 0xfe, 0x01,
    0x28, 0x28, 0xcb, 0x77, 0x28, 0xf3, 0xcd, 0x84, 0x05, 0x18, 0xef, 0xcd, 0xe0, 0x06, 0x3e, 0x76,
    0xcd, 0x59, 0x05, 0x38, 0x15, 0xcf, 0x04, 0xcd, 0xe0, 0x06, 0xfd, 0xcb, 0x01, 0xc6, 0xaf, 0xd7,
    0x30, 0xf3, 0xd9, 0x79, 0xd9, 0x3d, 0xe6, 0x07, 0x20, 0xf4, 0xd9, 0xeb, 0xed, 0x43, 0x24, 0x40,
    0x22, 0x0e, 0x40, 0x22, 0x10, 0x40, 0xc9, 0x2a, 0x0c, 0x40, 0x36, 0x76, 0x23, 0x01, 0x21, 0x17,
    0x18, 0xea, 0x4f, 0x2c, 0x64, 0x3f, 0x59, 0x2b, 0x17, 0x4b, 0x36, 0x4e, 0x10, 0x5e, 0x5d, 0x2a,
    0x2d, 0x5a, 0x61, 0x3b, 0x18, 0x4d, 0x0d, 0x11, 0x44, 0x4c, 0x31, 0x50, 0x01, 0xe3, 0x02, 0x06,
    0x00, 0x34, 0x09, 0x06, 0xd5, 0x05, 0xb9, 0x08, 0x06, 0x00, 0x43, 0x09, 0x00, 0x2e, 0x09, 0x00,
    0x65, 0x09, 0x04, 0xe3, 0x06, 0xd6, 0x05, 0xc4, 0x08, 0x04, 0x00, 0xf9, 0x08, 0x05, 0x72, 0x09,
    0x01, 0x00, 0x9a, 0x09, 0x04, 0xda, 0x06, 0xd9, 0x00, 0xd3, 0x0c, 0x05, 0x4a, 0x08, 0x03, 0x3d,
    0x09, 0x03, 0x56, 0x02, 0x06, 0xd8, 0x05, 0xd1, 0x09, 0x03, 0x23, 0x09, 0x00, 0x06, 0x02, 0x00,
    0xb6, 0x01, 0x00, 0x30, 0x09, 0x00, 0x5b, 0x06, 0x00, 0x47, 0x07, 0x05, 0x44, 0x08, 0x2b, 0x22,
    0x26, 0x40, 0x21, 0x00, 0x00, 0x00, 0x22, 0x15, 0x40, 0x21, 0x19, 0x40, 0xcb, 0x6e, 0x28, 0x07,
    0xcb, 0xbe, 0x46, 0xdf, 0xc3, 0x89, 0x08, 0xcb, 0xfe, 0xe7, 0xcd, 0x79, 0x06, 0x38, 0x06, 0xd9,
    0x11, 0xf0, 0xd8, 0x19, 0xd9, 0xdc, 0xae, 0x08, 0xcd, 0x1a, 0x00, 0xfd, 0xcb, 0x19, 0xbe, 0x01,
    0x00, 0x00, 0xed, 0x43, 0x22, 0x40, 0xfe, 0x76, 0xc8, 0x4f, 0xe7, 0x79, 0xd6, 0xe6, 0x38, 0xe5,
    0x4f, 0x21, 0x52, 0x07, 0x09, 0x4e, 0x09, 0x18, 0x03, 0x2a, 0x1a, 0x40, 0x7e, 0x23, 0x22, 0x1a,
    0x40, 0x01, 0x09, 0x08, 0xc5, 0x4f, 0x17, 0x38, 0x0d, 0x21, 0x36, 0x08, 0x06, 0x00, 0x09, 0x4e,
    0x09, 0xe5, 0xcd, 0x1a, 0x00, 0xc9, 0xcd, 0x1a, 0x00, 0xfe, 0xd5, 0x20, 0x04, 0xfd, 0xcb, 0x19,
    0xfe, 0xb9, 0x20, 0x7a, 0xe7, 0xc9, 0x1f, 0x33, 0x4d, 0x17, 0x64, 0x1b, 0x6c, 0xfd, 0xcb, 0x01,
    0x7e, 0xc0, 0xc1, 0x7e, 0xfe, 0x76, 0xc4, 0xae, 0x08, 0x7e, 0xfe, 0x76, 0xc8, 0xe7, 0x18, 0xfa,
    0xfe, 0x76, 0xc4, 0xa8, 0x08, 0xbf, 0xc1, 0xcc, 0x3d, 0x08, 0xeb, 0x2a, 0x1a, 0x40, 0x4e, 0x23,
    0x46, 0xeb, 0xc5, 0xed, 0x4b, 0x22, 0x40, 0x78, 0xb1, 0xc9, 0xcd, 0x14, 0x0d, 0x30, 0x3f, 0xfd,
    0xcb, 0x01, 0x7e, 0xca, 0xad, 0x0a, 0x22, 0x20, 0x40, 0xfd, 0xcb, 0x01, 0xbe, 0xcd, 0xad, 0x0a,
    0xfd, 0xcb, 0x01, 0xfe, 0xc9, 0xc1, 0xfd, 0x46, 0x01, 0xc5, 0xef, 0xd1, 0x01, 0x3d, 0x0c, 0x3a,
    0x01, 0x40, 0xcb, 0x7f, 0x20, 0xcc, 0xaa, 0xe6, 0x40, 0xc4, 0xae, 0x08, 0x18, 0xa5, 0x22, 0x20,
    0x40, 0xcd, 0x14, 0x0d, 0x30, 0x08, 0xdf, 0xc9, 0xef, 0xfd, 0xcb, 0x01, 0x76, 0xc0, 0x3a, 0x15,
    0x40, 0xfd, 0xb6, 0x16, 0xc0, 0x22, 0x15, 0x40, 0xc9, 0x20, 0x06, 0xfd, 0xcb, 0x01, 0x7e, 0x20,
    0x89, 0xc3, 0xe8, 0x07, 0xc5, 0xcd, 0xa8, 0x08, 0xc1, 0xcd, 0x3d, 0x08, 0x2a, 0x22, 0x40, 0xe5,
    0xcd, 0x3d, 0x0c, 0xc1, 0xfd, 0xcb, 0x00, 0x7e, 0xc8, 0xc5, 0x2b, 0xcb, 0x7e, 0xcb, 0xfe, 0x23,
    0x23, 0x20, 0x07, 0x01, 0x04, 0x00, 0x23, 0xcd, 0xd5, 0x05, 0x23, 0xd1, 0x73, 0x23, 0x72, 0x23,
    0xed, 0x5b, 0x02, 0x40, 0x13, 0x73, 0x23, 0x72, 0xc9, 0x2a, 0x20, 0x40, 0xcd, 0x3b, 0x0b, 0xfd,
    0xcb, 0x00, 0x7e, 0xc8, 0xeb, 0x2b, 0x2b, 0xcb, 0x7e, 0x28, 0x16, 0x13, 0x23, 0x73, 0x23, 0x72,
    0x23, 0x4e, 0x23, 0x46, 0xc5, 0xe3, 0xcd, 0xcd, 0x0d, 0xe1, 0xd8, 0x23, 0x4e, 0x23, 0x46, 0x18,
    0x13, 0xcf, 0x00, 0x20, 0x04, 0xed, 0x4b, 0x1e, 0x40, 0xed, 0x43, 0x1c, 0x40, 0xc9, 0xcf, 0x08,
    0xed, 0x4b, 0x17, 0x40, 0xed, 0x43, 0x02, 0x40, 0xfd, 0xcb, 0x01, 0xde, 0xc9, 0xcd, 0x34, 0x09,
    0xc3, 0x5b, 0x06, 0x2a, 0x02, 0x40, 0x23, 0xe3, 0xe5, 0xcd, 0x34, 0x09, 0x01, 0x06, 0x00, 0x2a,
    0x10, 0x40, 0x09, 0xeb, 0x2a, 0x25, 0x40, 0x67, 0x3e, 0x13, 0x85, 0x6f, 0x7c, 0x26, 0x00, 0x19,
    0xed, 0x72, 0xd8, 0xcf, 0x03, 0xe1, 0xc1, 0xe5, 0x78, 0xfe, 0x3f, 0x20, 0xc7, 0xe1, 0xc5, 0xe5,
    0xcf, 0x06, 0x7e, 0xfe, 0x76, 0xca, 0x1b, 0x07, 0xd6, 0xd8, 0xce, 0x00, 0x28, 0x13, 0xef, 0xcd,
    0xf1, 0x06, 0xcd, 0x1a, 0x00, 0xd6, 0xd8, 0xce, 0x00, 0x28, 0x06, 0xcd, 0x3d, 0x08, 0xc3, 0x1b,
    0x07, 0xd4, 0x27, 0x07, 0xe7, 0xfe, 0x76, 0xc8, 0x18, 0xde, 0xfd, 0xcb, 0x03, 0x7e, 0x20, 0x2f,
    0xe1, 0x21, 0x19, 0x40, 0xcb, 0xee, 0xcb, 0xb6, 0x3a, 0x01, 0x40, 0xe6, 0x40, 0x01, 0x02, 0x00,
    0x20, 0x02, 0x0e, 0x04, 0xb6, 0x77, 0xf7, 0xd0, 0x36, 0x76, 0x79, 0x0f, 0x0f, 0x38, 0x03, 0x12,
    0x2b, 0x77, 0x2b, 0x36, 0xb0, 0x3a, 0x25, 0x40, 0x3c, 0x32, 0x12, 0x40, 0xc3, 0xf7, 0x02, 0xcf,
    0x07, 0xc5, 0xef, 0xd1, 0xcd, 0x3d, 0x08, 0x3a, 0x22, 0x40, 0xfd, 0xcb, 0x00, 0x7e, 0xc8, 0x12,
    0xc9, 0x48, 0xc5, 0xcd, 0x18, 0x0d, 0x38, 0x3c, 0x01, 0x00, 0x09, 0x51, 0x59, 0xd6, 0xdc, 0x28,
    0x26, 0x1b, 0x06, 0x04, 0x3c, 0x28, 0x20, 0x3c, 0x28, 0x22, 0xfe, 0x27, 0x20, 0x10, 0xfd, 0xcb,
    0x01, 0xb6, 0x23, 0x22, 0x22, 0x40, 0xdf, 0x3d, 0x28, 0x17, 0xfe, 0x75, 0x20, 0xf8, 0xcd, 0xae,
    0x08, 0xd9, 0x01, 0x00, 0x00, 0x18, 0x35, 0xd5, 0xc5, 0xe7, 0x18, 0xc7, 0xcd, 0x49, 0x00, 0x18,
    0x16, 0xdf, 0x18, 0x13, 0xfe, 0x26, 0x38, 0x05, 0xcd, 0xad, 0x0a, 0x18, 0x0a, 0xcd, 0x79, 0x06,
    0xdc, 0xae, 0x08, 0xfd, 0xcb, 0x01, 0xf6, 0xcd, 0x1a, 0x00, 0xd9, 0x01, 0x00, 0x00, 0xd6, 0xdc,
    0x38, 0x0a, 0xfe, 0x0a, 0x30, 0x06, 0x4f, 0x21, 0xa3, 0x0a, 0x09, 0x46, 0xd1, 0x7a, 0xb8, 0x38,
    0x37, 0xa7, 0xd9, 0xc8, 0xd9, 0xfd, 0xcb, 0x01, 0x7e, 0x28, 0x14, 0x16, 0x00, 0x21, 0x1f, 0x0d,
    0x19, 0x19, 0x5e, 0x23, 0x56, 0x21, 0x7f, 0x0a, 0xe3, 0xd5, 0xed, 0x5b, 0x22, 0x40, 0xc9, 0x7b,
    0xfe, 0x0a, 0x1f, 0x1f, 0xfd, 0xae, 0x01, 0xe6, 0x40, 0xd9, 0xc4, 0xae, 0x08, 0xd9, 0xe1, 0x22,
    0x22, 0x40, 0xfd, 0xcb, 0x01, 0xf6, 0x18, 0xc4, 0xd5, 0x79, 0xfd, 0xcb, 0x01, 0x76, 0x20, 0x0a,
    0xc6, 0x03, 0x4f, 0xfe, 0x0a, 0xd9, 0xdc, 0xae, 0x08, 0xd9, 0x2a, 0x22, 0x40, 0xe5, 0xc5, 0xd9,
    0xc3, 0x19, 0x0a, 0x06, 0x06, 0x08, 0x07, 0x03, 0x02, 0x0a, 0x05, 0x05, 0x05, 0xe5, 0x21, 0x01,
    0x40, 0xcb, 0xae, 0xcb, 0xf6, 0xdf, 0xfe, 0x0d, 0xca, 0x30, 0x0b, 0xfe, 0xda, 0xca, 0x2b, 0x0b,
    0xcd, 0x18, 0x0d, 0x30, 0x03, 0xdf, 0x18, 0xf8, 0xfe, 0xda, 0x28, 0x0a, 0xfe, 0x0d, 0xc2, 0x35,
    0x0b, 0xdf, 0xfe, 0xda, 0x20, 0x51, 0x11, 0xbf, 0x0b, 0xe1, 0xe5, 0x4e, 0xcd, 0x55, 0x00, 0x13,
    0x1a, 0xb9, 0x28, 0xf7, 0xe6, 0x3f, 0xb9, 0x20, 0x05, 0x3e, 0xda, 0xbe, 0x28, 0x0b, 0x1a, 0xa7,
    0x28, 0x35, 0x13, 0x17, 0x30, 0xf8, 0x13, 0x18, 0xe0, 0xd5, 0xcd, 0x49, 0x00, 0xd1, 0xe3, 0x21,
    0x01, 0x40, 0x1a, 0xae, 0xe6, 0x40, 0x20, 0x1f, 0xcb, 0xee, 0xcb, 0xf6, 0x1a, 0xe6, 0x3f, 0xfe,
    0x0d, 0x20, 0x02, 0xcb, 0xb6, 0xcb, 0x7e, 0xe1, 0xc8, 0x21, 0xba, 0x0b, 0xe5, 0xeb, 0x23, 0x5e,
    0x23, 0x56, 0xd5, 0x2a, 0x22, 0x40, 0xc9, 0xe1, 0xc3, 0xae, 0x08, 0xcd, 0x49, 0x00, 0x18, 0x05,
    0xfd, 0xcb, 0x01, 0xb6, 0xdf, 0xe1, 0xfd, 0xcb, 0x01, 0x7e, 0xc8, 0x4e, 0x23, 0x7e, 0xe5, 0xfe,
    0xda, 0x20, 0x19, 0xc5, 0xed, 0x4b, 0x26, 0x40, 0xc5, 0xcd, 0x25, 0x00, 0xe1, 0x22, 0x26, 0x40,
    0xc1, 0x21, 0x00, 0x40, 0xcb, 0x7e, 0x20, 0x13, 0x36, 0x02, 0xe1, 0xc9, 0xcb, 0xa9, 0xfe, 0x0d,
    0x28, 0x09, 0xcb, 0xf1, 0xcd, 0x18, 0x0d, 0x38, 0x02, 0xcb, 0xe9, 0x2a, 0x08, 0x40, 0x7e, 0xe6,
    0x7f, 0xca, 0xd0, 0x0c, 0xb9, 0x20, 0x1c, 0x17, 0x87, 0xfa, 0xa4, 0x0b, 0x30, 0x3a, 0xd1, 0xd5,
    0xe5, 0x23, 0x1a, 0x13, 0xbe, 0x28, 0xfa, 0xf6, 0x80, 0xbe, 0x20, 0x06, 0x1a, 0xcd, 0x18, 0x0d,
    0x30, 0x09, 0xe1, 0xc5, 0xcd, 0x24, 0x06, 0xeb, 0xc1, 0x18, 0xd3, 0xd1, 0xd1, 0x23, 0x5e, 0x23,
    0x56, 0xeb, 0x18, 0x16, 0x38, 0xf6, 0xe3, 0x2a, 0x22, 0x40, 0xcb, 0x04, 0xd1, 0x20, 0x0f, 0x13,
    0x1a, 0xbd, 0x38, 0x0a, 0x29, 0x19, 0x18, 0xe5, 0xd1, 0x23, 0x22, 0x22, 0x40, 0xc9, 0xcf, 0x02,
    0x35, 0x2a, 0x2a, 0xf0, 0x24, 0x0c, 0x28, 0x2d, 0x37, 0xcd, 0x28, 0x0c, 0x28, 0x34, 0x29, 0xaa,
    0x24, 0x0c, 0x37, 0x33, 0xe9, 0xed, 0x0b, 0x39, 0x31, 0x8d, 0x38, 0x0c, 0x3a, 0x38, 0xf7, 0xf0,
    0x06, 0x38, 0x39, 0x37, 0xcd, 0x10, 0x0c, 0x26, 0x27, 0xf8, 0xf2, 0x0d, 0x00, 0xe5, 0x2a, 0x1c,
    0x40, 0x11, 0x4d, 0x00, 0x7c, 0xb5, 0x28, 0x0b, 0xcd, 0x55, 0x0d, 0xa7, 0xed, 0x42, 0x30, 0x05,
    0x23, 0x18, 0x02, 0xed, 0x52, 0x22, 0x1c, 0x40, 0xd1, 0xcd, 0x55, 0x0d, 0x60, 0x69, 0x23, 0xc9,
    0xd9, 0x01, 0x07, 0x00, 0xf7, 0x30, 0x1d, 0xd5, 0xd9, 0x44, 0x4d, 0xcd, 0xa1, 0x06, 0xd9, 0x3e,
    0x01, 0x12, 0xe1, 0xc9, 0x6e, 0x26, 0x00, 0xc9, 0x01, 0x02, 0x00, 0x7d, 0xf7, 0x30, 0x05, 0x36,
    0x01, 0x2b, 0x77, 0xc9, 0x21, 0x30, 0x0c, 0xc9, 0x7e, 0x3d, 0xc8, 0x23, 0xc9, 0xfd, 0xcb, 0x00,
    0x7e, 0xc8, 0xc5, 0x2a, 0x20, 0x40, 0xcd, 0x3b, 0x0b, 0x21, 0x00, 0x40, 0x7e, 0xfe, 0x02, 0x28,
    0xd1, 0x17, 0xfd, 0xcb, 0x01, 0x76, 0x38, 0x3b, 0x36, 0xff, 0x28, 0x47, 0x2a, 0x20, 0x40, 0x01,
    0x02, 0x00, 0x03, 0x23, 0x7e, 0xcd, 0x18, 0x0d, 0x38, 0xf8, 0xfe, 0xda, 0x28, 0x62, 0xf7, 0x30,
    0xb1, 0xd5, 0x2a, 0x20, 0x40, 0x0b, 0x0b, 0x0b, 0x1b, 0x78, 0xb1, 0x3e, 0x40, 0x28, 0x08, 0xed,
    0xb0, 0x7e, 0xf6, 0x80, 0x12, 0x3e, 0x60, 0xe1, 0xcd, 0xb9, 0x0c, 0xeb, 0x1b, 0xe1, 0xeb, 0x72,
    0x2b, 0x73, 0xc9, 0x20, 0xf8, 0xe1, 0xcd, 0xa4, 0x0c, 0x2a, 0x22, 0x40, 0x2b, 0xcd, 0x24, 0x06,
    0xc3, 0x66, 0x06, 0xe1, 0x3e, 0x01, 0x01, 0x01, 0x00, 0xbe, 0x23, 0x03, 0x20, 0xfb, 0xe5, 0xf7,
    0xeb, 0xe1, 0xd0, 0xed, 0xb8, 0xeb, 0x23, 0x3e, 0xa0, 0xeb, 0x2a, 0x20, 0x40, 0xae, 0xeb, 0xf5,
    0xcd, 0x0d, 0x0d, 0xf1, 0x2b, 0x77, 0x2a, 0x0c, 0x40, 0x22, 0x0a, 0x40, 0x2b, 0x36, 0x80, 0xc9,
    0xe1, 0xcf, 0x01, 0xa0, 0xc2, 0xbe, 0x0b, 0xc5, 0x60, 0x69, 0x23, 0x23, 0x29, 0x44, 0x4d, 0xf7,
    0xd2, 0x22, 0x0c, 0x2b, 0x54, 0x5d, 0x1b, 0x0b, 0x0b, 0x36, 0x00, 0xed, 0xb8, 0xc1, 0x71, 0x3e,
    0x80, 0x18, 0xc6, 0x2a, 0x0a, 0x40, 0xe5, 0x2a, 0x0c, 0x40, 0x2b, 0xcd, 0xd5, 0x05, 0x23, 0x23,
    0xc1, 0xed, 0x43, 0x0a, 0x40, 0xc1, 0xeb, 0x23, 0x37, 0xc9, 0x2a, 0x0c, 0x40, 0xed, 0x5b, 0x0a,
    0x40, 0xc3, 0x63, 0x06, 0xfe, 0x26, 0x18, 0x02, 0xfe, 0x1c, 0x3f, 0xd0, 0xfe, 0x40, 0xc9, 0x39,
    0x0d, 0x3e, 0x0d, 0x44, 0x0d, 0x90, 0x0d, 0xb5, 0x0d, 0xbc, 0x0d, 0x70, 0x0d, 0xc3, 0x0d, 0xcc,
    0x0d, 0xcd, 0x0d, 0xd9, 0x0d, 0xdf, 0x0d, 0xde, 0x0d, 0xa7, 0xed, 0x52, 0x18, 0x03, 0xa7, 0xed,
    0x5a, 0xe0, 0xcf, 0x05, 0xcd, 0xed, 0x0d, 0xc5, 0x08, 0xcd, 0x55, 0x0d, 0x20, 0x3f, 0xc1, 0x08,
    0x1f, 0xd0, 0xc3, 0xf6, 0x0d, 0x44, 0x4d, 0x3e, 0x10, 0x21, 0x00, 0x00, 0x29, 0xcb, 0x11, 0xcb,
    0x10, 0x30, 0x04, 0x19, 0x30, 0x01, 0x03, 0x3d, 0x20, 0xf2, 0x7c, 0xe6, 0x80, 0xb0, 0xb1, 0xc9,
    0xcb, 0x7a, 0x20, 0xce, 0xaf, 0xcd, 0xf2, 0x0d, 0xa3, 0x08, 0xc5, 0x42, 0x4b, 0xeb, 0x21, 0x01,
    0x00, 0x0b, 0xcb, 0x78, 0x20, 0xc8, 0xc5, 0xcd, 0x55, 0x0d, 0xc1, 0x28, 0xf4, 0xc1, 0x18, 0xb2,
    0x7a, 0xb3, 0x28, 0xae, 0xcd, 0xed, 0x0d, 0xc5, 0x1f, 0xed, 0x6a, 0x7c, 0x4d, 0x21, 0x00, 0x00,
    0x06, 0x10, 0xed, 0x6a, 0xed, 0x52, 0x30, 0x01, 0x19, 0xcb, 0x11, 0x17, 0x10, 0xf4, 0x67, 0x69,
    0x23, 0xc1, 0xd8, 0x18, 0x41, 0x7c, 0xa2, 0x67, 0x7d, 0xa3, 0x6f, 0xc9, 0x7c, 0xb2, 0x67, 0x7d,
    0xb3, 0x6f, 0xc9, 0xa7, 0xed, 0x52, 0x21, 0xff, 0xff, 0xc8, 0x23, 0xc9, 0xeb, 0xa7, 0xed, 0x52,
    0x7c, 0x17, 0xe2, 0xd6, 0x0d, 0x3f, 0xed, 0x62, 0xc9, 0xcd, 0xe4, 0x0d, 0x18, 0xe8, 0xeb, 0xcd,
    0xe4, 0x0d, 0x18, 0xf2, 0x1a, 0xbe, 0xc0, 0x3d, 0xc8, 0x13, 0x23, 0x18, 0xf7, 0xaf, 0xcd, 0xf1,
    0x0d, 0xeb, 0xcb, 0x7c, 0xc8, 0x3c, 0x08, 0x7c, 0x2f, 0x67, 0x7d, 0x2f, 0x6f, 0x23, 0x08, 0xc9,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
    0xf0, 0xf0, 0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xf0, 0xf0, 0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x0f, 0x0f,
    0x0f, 0x0f, 0x0f, 0x0f, 0xf0, 0xf0, 0xf0, 0xf0, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55,
    0x00, 0x00, 0x00, 0x00, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x1e, 0x21, 0x78, 0x20, 0x20, 0x7f, 0x00, 0x00, 0x08, 0x3e, 0x48, 0x3e, 0x09, 0x3e, 0x08,
    0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x3e, 0x41, 0x06, 0x08, 0x00, 0x08, 0x00,
    0x00, 0x04, 0x08, 0x08, 0x08, 0x08, 0x04, 0x00, 0x00, 0x10, 0x08, 0x08, 0x08, 0x08, 0x10, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x3e, 0x08, 0x08, 0x00,
    0x00, 0x00, 0x2a, 0x1c, 0x08, 0x1c, 0x2a, 0x00, 0x00, 0x00, 0x02, 0x04, 0x08, 0x10, 0x20, 0x00,
    0x00, 0x00, 0x00, 0x3e, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x10, 0x08, 0x04, 0x08, 0x10, 0x00,
    0x00, 0x00, 0x04, 0x08, 0x10, 0x08, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x08, 0x08, 0x10,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x0c, 0x00,
    0x00, 0x1c, 0x22, 0x41, 0x41, 0x22, 0x1c, 0x00, 0x00, 0x0c, 0x14, 0x04, 0x04, 0x04, 0x1e, 0x00,
    0x00, 0x3e, 0x41, 0x01, 0x3e, 0x40, 0x7f, 0x00, 0x00, 0x3e, 0x41, 0x06, 0x01, 0x41, 0x3e, 0x00,
    0x00, 0x0c, 0x14, 0x24, 0x44, 0x7f, 0x04, 0x00, 0x00, 0x7f, 0x40, 0x7e, 0x01, 0x41, 0x3e, 0x00,
    0x00, 0x3e, 0x40, 0x7e, 0x41, 0x41, 0x3e, 0x00, 0x00, 0x7f, 0x01, 0x02, 0x04, 0x08, 0x08, 0x00,
    0x00, 0x3e, 0x41, 0x3e, 0x41, 0x41, 0x3e, 0x00, 0x00, 0x3e, 0x41, 0x41, 0x3f, 0x01, 0x3e, 0x00,
    0x00, 0x3e, 0x41, 0x41, 0x7f, 0x41, 0x41, 0x00, 0x00, 0x7e, 0x41, 0x7e, 0x41, 0x41, 0x7e, 0x00,
    0x00, 0x1e, 0x21, 0x40, 0x40, 0x21, 0x1e, 0x00, 0x00, 0x7c, 0x42, 0x41, 0x41, 0x42, 0x7c, 0x00,
    0x00, 0x7f, 0x40, 0x7c, 0x40, 0x40, 0x7f, 0x00, 0x00, 0x7f, 0x40, 0x7c, 0x40, 0x40, 0x40, 0x00,
    0x00, 0x1e, 0x21, 0x40, 0x47, 0x21, 0x1e, 0x00, 0x00, 0x41, 0x41, 0x7f, 0x41, 0x41, 0x41, 0x00,
    0x00, 0x3e, 0x08, 0x08, 0x08, 0x08, 0x3e, 0x00, 0x00, 0x02, 0x02, 0x02, 0x42, 0x22, 0x1c, 0x00,
    0x00, 0x42, 0x44, 0x78, 0x44, 0x42, 0x41, 0x00, 0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x7f, 0x00,
    0x00, 0x41, 0x63, 0x55, 0x49, 0x41, 0x41, 0x00, 0x00, 0x61, 0x51, 0x49, 0x45, 0x43, 0x41, 0x00,
    0x00, 0x3e, 0x41, 0x41, 0x41, 0x41, 0x3e, 0x00, 0x00, 0x7e, 0x41, 0x41, 0x7e, 0x40, 0x40, 0x00,
    0x00, 0x3e, 0x41, 0x41, 0x49, 0x45, 0x3e, 0x00, 0x00, 0x7e, 0x41, 0x41, 0x7e, 0x44, 0x42, 0x00,
    0x00, 0x3e, 0x40, 0x3e, 0x01, 0x41, 0x3e, 0x00, 0x00, 0x7f, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00,
    0x00, 0x41, 0x41, 0x41, 0x41, 0x41, 0x3e, 0x00, 0x00, 0x41, 0x41, 0x41, 0x22, 0x14, 0x08, 0x00,
    0x00, 0x41, 0x41, 0x41, 0x49, 0x55, 0x22, 0x00, 0x00, 0x21, 0x12, 0x0c, 0x0c, 0x12, 0x21, 0x00,
    0x00, 0x41, 0x22, 0x1c, 0x08, 0x08, 0x08, 0x00, 0x00, 0x7f, 0x02, 0x04, 0x08, 0x10, 0x7f, 0x00,

  ];
  let ram16k = new Array(16384).fill(0);
  let rom_labels_data_import = {
    "labelmap": {
      "format": "emf.map.json:1",
      "map": {
        0x0000: "START",
        0x0008: "ERROR-1",
        0x0010: "PRINT-A",
        0x0013: "ERROR-2",
        0x0018: "NXT-CH-SP",
        0x001A: "get-char",
        0x001E: "TEST-CHAR",
        0x0020: "NEXT-CHAR",
        0x0025: "EVAL-EXPR",
        0x0028: "SCAN-CALC",
        0x0030: "BC-SPACES",
        0x0038: "MASK-INT",
        0x0041: "WAIT-INT",
        0x0045: "SCAN-LINE",
        0x0049: "BRACKET",
        0x0052: "CH_ADD+1",
        0x0055: "CH_ADD_LP",
        0x006C: "MAIN-KEYS",
        0x00BA: "TKN-TABLE",
        0x013C: "DISP-1",
        0x013F: "KEYBOARD",
        0x0141: "KB-1",
        0x0143: "KB-2",
        0x0154: "EACH-LINE",
        0x0168: "KB-3",
        0x0194: "KB-4",
        0x01AD: "DISP-2",
        0x01B6: "SAVE",
        0x01BA: "SAVE-1",
        0x01C1: "SAVE-2",
        0x01CB: "SAVE-3",
        0x01CE: "EACH-BIT",
        0x01D6: "SAVE-4",
        0x01DA: "SAVE-5",
        0x01E2: "SAVE-6",
        0x01E8: "SAVE-7",
        0x01F8: "TEST-END",
        0x0203: "JUMP-EXEC",
        0x0206: "LOAD",
        0x0207: "LOAD-1",
        0x020A: "LOAD-2",
        0x0220: "LOAD-3",
        0x0222: "LOAD-4",
        0x022F: "LOAD-5",
        0x0231: "LOAD-6",
        0x0242: "LOAD-7",
        0x024D: "LD-ABORT",
        0x0256: "LIST",
        0x0261: "RAM-FILL",
        0x0267: "RAM-READ",
        0x0283: "MAIN-EXEC",
        0x0293: "AUTO-LIST",
        0x02B0: "LIST-1",
        0x02B5: "LIST-ALL",
        0x02D3: "AUTO-L-J",
        0x02D5: "ED-DOWN",
        0x02D8: "LN-FETCH",
        0x02E5: "LN-STORE",
        0x02F0: "LIST-DONE",
        0x02F7: "ED-COPY",
        0x031D: "LINE-DONE",
        0x032B: "KEY-LINE",
        0x034D: "EDC-2",
        0x035C: "EDC-JR",
        0x035E: "ED-KEYS",
        0x036C: "ED-DEL-1",
        0x0372: "ED-K-TAB",
        0x0382: "ED-LEFT",
        0x0387: "ED-RIGHT",
        0x0395: "ED-DELETE",
        0x039E: "ED-EDGE",
        0x03A7: "EDC-JR2",
        0x03A9: "ED-UP",
        0x03B3: "ED-LINE",
        0x03B9: "ED-HOME",
        0x03BE: "LINE-NO-A",
        0x03C2: "LINE-NO",
        0x03CB: "ED-EDIT",
        0x0408: "ED-ENTER",
        0x043C: "MAIN-1",
        0x0444: "M-2",
        0x0447: "M-3",
        0x0458: "M-4",
        0x0474: "M-5",
        0x0488: "MAIN-ERR",
        0x04A1: "SET-CONT",
        0x04A8: "MAIN-5",
        0x04BA: "MAIN-ADD",
        0x04D1: "MAIN-ADD1",
        0x04F4: "MAIN-JR",
        0x04F7: "OUT-LINE",
        0x0507: "OUT-LINE-1",
        0x0512: "OUT-LINE-2",
        0x0516: "OUT-LINE-3",
        0x0523: "OUT-LINE-4",
        0x0536: "OUT-LINE-5",
        0x0539: "OUT-LINE-6",
        0x053C: "OUT-CURS",
        0x0543: "OUT-K",
        0x0546: "OUT-SP-2",
        0x054C: "OUT-SP-NO",
        0x054D: "OUT-SP-1",
        0x0556: "OUT-CODE",
        0x0559: "OUT-SP-CH",
        0x055C: "OUT-LD-SP",
        0x0560: "PRINT-A-2",
        0x0569: "NO-NL",
        0x0574: "PR-SPR",
        0x0578: "PRI-SKIP",
        0x057C: "PRI-CH",
        0x0582: "PR-END",
        0x0584: "PO-TOKEN",
        0x0592: "PO-LOOP",
        0x05A8: "PO-SEARCH",
        0x05B2: "PO-STEP",
        0x05B9: "PO-FOUND",
        0x05C2: "CL-EOD",
        0x05CC: "INS-CR",
        0x05CE: "CL-EOL",
        0x05D0: "SET-EOD",
        0x05D5: "MAKE-ROOM",
        0x05DF: "POINTERS",
        0x05E6: "PTR-NEXT",
        0x05FA: "PTR-DONE",
        0x060A: "LINE-ADDR",
        0x0610: "LINE-AD-1",
        0x061C: "CP-LINES",
        0x0624: "NEXT-ONE",
        0x062F: "NO-SEARCH",
        0x0635: "NO-SLNFN",
        0x063B: "NO-FNXT",
        0x063C: "NO-LNLP",
        0x0643: "NO-STR_AR",
        0x064F: "NXT-O-6",
        0x0652: "NXT-O-7",
        0x0653: "DIFFER",
        0x065B: "CLEAR",
        0x0663: "RECLAIM-1",
        0x0666: "RECLAIM-2",
        0x0679: "INT-TO-HL",
        0x067F: "DEC-LP",
        0x068E: "NO-OVRFLW",
        0x069A: "STOR-RSLT",
        0x06A1: "OUT-NUM-1",
        0x06B5: "OUT-NUM-P",
        0x06BF: "OUT-NUM-2",
        0x06C8: "OUT-NUM-3",
        0x06DD: "OUT-NUM-4",
        0x06E0: "UNSTACK-Z",
        0x06F0: "USR",
        0x06F1: "PR-ITEM",
        0x0709: "PO-CHAR",
        0x070A: "PO-LOOP",
        0x070C: "PR-STRING",
        0x071B: "PRINT-CR",
        0x0723: "PO-CHECK",
        0x0725: "ERROR-05",
        0x0727: "PO-FILL",
        0x072E: "PO-SPACE",
        0x073A: "PO-STORE",
        0x073C: "PO-STOR-2",
        0x0747: "CLS",
        0x076C: "P-LET",
        0x076F: "P-GO-TO",
        0x0773: "P-IF",
        0x0778: "P-GOSUB",
        0x077C: "P-STOP",
        0x077F: "P-RETURN",
        0x0782: "P-FOR",
        0x0789: "P-NEXT",
        0x078D: "P-PRINT",
        0x0790: "P-INPUT",
        0x0794: "P-DIM",
        0x079B: "P-REM",
        0x079E: "P-RUN",
        0x07A1: "P-LIST",
        0x07A4: "P-POKE",
        0x07A9: "P-RANDOMISE",
        0x07AC: "P-LOAD",
        0x07AF: "P-SAVE",
        0x07B2: "P-CONTINUE",
        0x07B5: "P-CLEAR",
        0x07B8: "P-CLS",
        0x07BB: "P-CH-END",
        0x07BE: "MAIN-G",
        0x07C2: "P-NEW-1",
        0x07D7: "E-LINE-NO",
        0x07E5: "E-L-ERR",
        0x07E8: "LINE-SCAN",
        0x0809: "SCAN-LOOP",
        0x080C: "GET-PARAM",
        0x0826: "SEPARATOR",
        0x0831: "SEP-1",
        0x0836: "TAB-CLASS",
        0x083D: "CHECK-END",
        0x0843: "CH-END-2",
        0x0844: "CH-END-3",
        0x0849: "SEE-BELOW",
        0x084A: "REM",
        0x0850: "CLASS-03",
        0x0855: "CLASS-00",
        0x0856: "CLASS-05",
        0x0862: "JUMP-BC",
        0x086A: "CLASS-01",
        0x0885: "CLASS-02",
        0x0889: "VAL-FETCH",
        0x089E: "CLASS-04",
        0x08A8: "CLASS-06",
        0x08AE: "INS-ERR",
        0x08B9: "IF",
        0x08C1: "IF-1",
        0x08C4: "FOR",
        0x08EA: "FOR-2",
        0x08F9: "NEXT",
        0x0921: "ERROR-01",
        0x0923: "RANDOMISE",
        0x0929: "RAND-1",
        0x092E: "ERROR-9",
        0x0930: "CONTINUE",
        0x0934: "GOTO",
        0x093D: "RUN",
        0x0943: "GOSUB",
        0x094F: "TEST-ROOM",
        0x0958: "TEST-RM-2",
        0x0963: "ERROR-4",
        0x0965: "RETURN",
        0x0972: "PRINT",
        0x0978: "PR-POSN-1",
        0x0991: "PR-POSN-2",
        0x099A: "INPUT",
        0x09B4: "IN-PR-1",
        0x09C2: "IN-PR-3",
        0x09CF: "ERROR-08",
        0x09D1: "POKE",
        0x09E1: "SCANNING",
        0x09E3: "S-LOOP-1",
        0x0A06: "S-Q-CHAR",
        0x0A0E: "S-ABORT",
        0x0A17: "S-PUSH-PO",
        0x0A19: "SCAN-LOOP",
        0x0A1C: "S-BRACKET",
        0x0A21: "S-CONT",
        0x0A24: "S-VAR-NUM",
        0x0A2D: "S-DIGIT",
        0x0A37: "S-OPERTR",
        0x0A4C: "S-LOOP",
        0x0A6F: "S-SYNTEST",
        0x0A7F: "S-INS-VAL",
        0x0A88: "S-TIGHTER",
        0x0A9A: "S-NEXT",
        0x0AA3: "TAB-PRIO",
        0x0AAD: "LOOK-VARS",
        0x0AC0: "V-CHAR",
        0x0AC8: "FUNC-LOOP",
        0x0AD6: "FUNC-SRCH",
        0x0AD9: "FUNC-LOOP",
        0x0ADB: "FUNC-CHAR",
        0x0AEE: "FUNC-NEXT",
        0x0AF9: "FUNC-MTCH",
        0x0B15: "FUNC-SYN",
        0x0B27: "FUNC-ERR",
        0x0B2B: "ARRAY",
        0x0B30: "STRING",
        0x0B35: "V-SYN",
        0x0B3B: "LV-FIND",
        0x0B5C: "LV-ENCODE",
        0x0B6B: "V-RUN",
        0x0B6E: "V-EACH",
        0x0B81: "V-MATCHES",
        0x0B92: "V-GET-PTR",
        0x0B93: "V-NEXT",
        0x0B9B: "V-FOUND-1",
        0x0B9C: "V-FOUND-2",
        0x0B9D: "V-FOUND-3",
        0x0BA4: "STK-VAR",
        0x0BB8: "STR-RSLT",
        0x0BBA: "INS-RSLT",
        0x0BBE: "ERROR-03",
        0x0BC0: "TAB-FUNC",
        0x0BED: "RND",
        0x0C03: "RND-2",
        0x0C05: "RND-3",
        0x0C10: "str$",
        0x0C22: "POP-RET",
        0x0C24: "PEEK",
        0x0C28: "chr$",
        0x0C2F: "NULL-PTR",
        0x0C34: "NULL-STR",
        0x0C38: "tl$",
        0x0C3D: "LET",
        0x0C62: "L-EACH-CH",
        0x0C87: "L-SINGLE",
        0x0C8D: "L-NUMERIC",
        0x0C93: "L-EXISTS",
        0x0CA3: "L-STRING",
        0x0CA4: "L-LENGTH",
        0x0CA9: "L-COUNT",
        0x0CB9: "L-MASK",
        0x0CD0: "ERROR-02",
        0x0CD3: "DIM",
        0x0CF3: "RESERVE",
        0x0D0A: "REC-EDIT",
        0x0D0D: "REC-V80",
        0x0D14: "ALPHA",
        0x0D18: "ALPHANUM",
        0x0D1A: "ALPHA-2",
        0x0D1F: "TAB-OPS",
        0x0D39: "subtract",
        0x0D3E: "addition",
        0x0D41: "RSLT-TEST",
        0x0D42: "ERROR-06",
        0x0D44: "multiply",
        0x0D4E: "MULT-2",
        0x0D55: "MULT16",
        0x0D5C: "MULT-LP",
        0x0D67: "MULT-SKIP",
        0x0D70: "to-power",
        0x0D81: "POWER-LP",
        0x0D8D: "POP6",
        0x0D90: "division",
        0x0DA2: "DIV-1",
        0x0DA9: "DIV-2",
        0x0DB5: "and",
        0x0DBC: "or",
        0x0DC3: "nos-eql",
        0x0DC6: "SET-RSLT",
        0x0DCC: "no-grtr",
        0x0DCD: "no-less",
        0x0DD6: "TEST-HL",
        0x0DD9: "strs-eql",
        0x0DDE: "str-grtr",
        0x0DDF: "str-less",
        0x0DE4: "STR-CMP",
        0x0DED: "PREP-MD",
        0x0DF1: "PREP-1",
        0x0DF2: "abs",
        0x0DF6: "TWOS-COMP",
      }
    }
  };
  let rom_labels = rom_labels_data_import.labelmap.map;

  /*
   **
   ** Basic methods
   **
   */
  function enableBlock(name) {
    enabledBlockList[name] = true;
  }

  function disableBlock(name) {
    enabledBlockList[name] = false;
  }

  function isValidAddress(addr) {
    addr = addr.getUnsigned ? addr.getUnsigned() : addr;
    addr &= 0xffff;
    if (addr >= 0 && addr < 4096 && enabledBlockList['rom']) {
      return true;
    }
    if (addr >= 4096 && addr < 8192 && enabledBlockList['srom1']) {
      return true;
    }
    if (addr >= 8192 && addr < 12288 && enabledBlockList['srom2']) {
      return true;
    }
    if (addr >= 12288 && addr < 16384 && enabledBlockList['srom3']) {
      return true;
    }
    if (addr >= 16384 && addr < 32768 && enabledBlockList['ram16k']) {
      return true;
    }
    if (addr >= 20480 && addr < 24576 && enabledBlockList['sram1ka']) {
      return true;
    }
    return false;
  } // isValidAddress

  function getAddressRanges() {
    let ranges = [];
    ranges.push({
      name: 'rom',
      start: 0,
      size: 4096,
      read: true,
      write: false,
      shadow: false,
      enabled: enabledBlockList['rom']
    });
    ranges.push({
      name: 'srom1',
      start: 4096,
      size: 4096,
      read: true,
      write: false,
      shadow: true,
      enabled: enabledBlockList['srom1']
    });
    ranges.push({
      name: 'srom2',
      start: 8192,
      size: 4096,
      read: true,
      write: false,
      shadow: true,
      enabled: enabledBlockList['srom2']
    });
    ranges.push({
      name: 'srom3',
      start: 12288,
      size: 4096,
      read: true,
      write: false,
      shadow: true,
      enabled: enabledBlockList['srom3']
    });
    ranges.push({
      name: 'ram16k',
      start: 16384,
      size: 16384,
      read: true,
      write: true,
      shadow: false,
      enabled: enabledBlockList['ram16k']
    });
    ranges.push({
      name: 'sram1ka',
      start: 20480,
      size: 4096,
      read: true,
      write: true,
      shadow: true,
      enabled: enabledBlockList['sram1ka']
    });
    return ranges;
  }

  function getLabel(addr) {
    addr = addr.getUnsigned ? addr.getUnsigned() : addr;
    addr &= 0xffff;
    if (addr >= 0 && addr < 4096) {
      return rom_labels[addr - 0];
    }
    return '';
  } // getLabel

  function read8(addr, forceRead) {
    addr = addr.getUnsigned ? addr.getUnsigned() : addr;
    addr &= 0xffff;
    if (addr >= 0 && addr < 4096 && enabledBlockList['rom']) {
      let data;
      data = rom[addr - 0];
      return data;
    } //fi 
    if (addr >= 4096 && addr < 8192 && enabledBlockList['srom1']) {
      let data;
      data = rom[addr - 4096];
      return data;
    } //fi 
    if (addr >= 8192 && addr < 12288 && enabledBlockList['srom2']) {
      let data;
      data = rom[addr - 8192];
      return data;
    } //fi 
    if (addr >= 12288 && addr < 16384 && enabledBlockList['srom3']) {
      let data;
      data = rom[addr - 12288];
      return data;
    } //fi 
    if (addr >= 16384 && addr < 32768 && enabledBlockList['ram16k']) {
      let data;
      data = ram16k[addr - 16384];
      return data;
    } //fi 
    if (addr >= 20480 && addr < 24576 && enabledBlockList['sram1ka']) {
      let data;
      data = ram4k[addr - 20480];
      return data;
    } //fi 
    return 0; // a bad default
  } // read8

  function write8(addr, data, forceWrite) {
    addr = addr.getUnsigned ? addr.getUnsigned() : addr;
    addr &= 0xffff;
    data = data.getUnsigned ? data.getUnsigned() : data;
    data &= 0xff;
    if (addr >= 0 && addr < 4096 && enabledBlockList['rom']) {
      // NOP - read only memory
      if (forceWrite) rom[addr - 0] = data;
      return;
    } //fi 
    if (addr >= 4096 && addr < 8192 && enabledBlockList['srom1']) {
      // NOP - read only memory
      if (forceWrite) srom1[addr - 4096] = data;
      return;
    } //fi 
    if (addr >= 8192 && addr < 12288 && enabledBlockList['srom2']) {
      // NOP - read only memory
      if (forceWrite) srom2[addr - 8192] = data;
      return;
    } //fi 
    if (addr >= 12288 && addr < 16384 && enabledBlockList['srom3']) {
      // NOP - read only memory
      if (forceWrite) srom3[addr - 12288] = data;
      return;
    } //fi 
    if (addr >= 16384 && addr < 32768 && enabledBlockList['ram16k']) {
      ram16k[addr - 16384] = data;
      return;
    } //fi 
    if (addr >= 20480 && addr < 24576 && enabledBlockList['sram1ka']) {
      ram4k[addr - 20480] = data;
      return;
    } //fi 
  } // write8


  /*
   **
   ** Helpers methods
   **
   */
  function read16(addr) {
    addr = addr.getUnsigned ? addr.getUnsigned() : addr;
    return read8(addr + 1) * 256 + read8(addr);
  }

  function write16(addr, data) {
    addr = addr.getUnsigned ? addr.getUnsigned() : addr;
    data = data.getUnsigned ? data.getUnsigned() : data;
    write8(addr + 1, data >> 8);
    write8(addr + 0, data & 255);
  }

  /*
   **
   ** State methods
   **
   */


  function getState() {
    let state = [];
    getAddressRanges().forEach((blk) => {
      if (!blk.shadow) {
        let memdata = [];
        for (let i = 0; i < blk.size; ++i) {
          memdata.push(read8(blk.start + i, true));
        }

        state.push({
          start: blk.start,
          data: memdata
        });
      }
    });

    return state;
  }

  function setState(json) {
    json.forEach((blk) => {
      let address = blk.start;
      for (let i = 0; i < blk.data.length; ++i, ++address) {
        write8(address, blk.data[i], true);
      }
    });
  }

  /*
   **
   ** Public interface
   **
   */
  return {
    isValidAddress,
    getAddressRanges,
    getLabel,
    read8,
    read16,
    write8,
    write16,
    enableBlock,
    disableBlock,
    getState,
    setState,
  };
});